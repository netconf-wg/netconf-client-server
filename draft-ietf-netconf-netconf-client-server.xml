<?xml version='1.0'?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">

<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc linkmailto="no" ?>
<?rfc editing="no" ?>
<?rfc comments="yes" ?>
<?rfc inline="yes"?>
<?rfc rfcedstyle="yes"?>
<?rfc-ext allow-markup-in-artwork="yes" ?>
<?rfc-ext include-index="no" ?>
<!--<?rfc strict="no"?> -->

<rfc category="std"
     ipr="trust200902"
     docName="draft-ietf-netconf-netconf-client-server-latest" >
    <front>
        <title>NETCONF Client and Server Models</title>
        <author initials="K.W." surname="Watsen" fullname="Kent Watsen">
            <organization>Juniper Networks</organization>
            <address>
                <email>kwatsen@juniper.net</email>
            </address>
        </author>
        <date/>
        <area>Operations</area>
        <workgroup>NETCONF Working Group</workgroup>
        <abstract>
            <t>This document defines two YANG modules, one module to
            configure a NETCONF client and the other module to configure 
            a NETCONF server.  Both modules support both the SSH and
            TLS transport protocols, and support both standard NETCONF
            and NETCONF Call Home connections.</t>
        </abstract>
        <note title="Editorial Note (To be removed by RFC Editor)">
          <t>This draft contains many placeholder values that need to be replaced
          with finalized values at the time of publication.  This note summarizes
          all of the substitutions that are needed.  No other RFC Editor
          instructions are specified elsewhere in this document.</t>

          <t>This document contains references to other drafts in progress, both in
          the Normative References section, as well as in body text throughout.  
          Please update the following references to reflect their final RFC assignments:
            <list style="symbols">
              <t>I-D.ietf-netconf-keystore</t>
              <t>I-D.ietf-netconf-ssh-client-server</t>
              <t>I-D.ietf-netconf-tls-client-server</t>
            </list>
          </t>
          <t>Artwork in this document contains shorthand references to drafts in 
          progress.  Please apply the following replacements:
            <list  style="symbols">
              <t><spanx style="verb">XXXX</spanx> --&gt; the assigned RFC value for this draft</t>
              <t><spanx style="verb">YYYY</spanx> --&gt; the assigned RFC value for I-D.ietf-netconf-ssh-client-server</t>
              <t><spanx style="verb">ZZZZ</spanx> --&gt; the assigned RFC value for I-D.ietf-netconf-tls-client-server</t>
            </list>
          </t>
          <t>Artwork in this document contains placeholder values for the date of publication of this
          draft.  Please apply the following replacement:
            <list  style="symbols">
              <t><spanx style="verb">YYYY-MM-DD</spanx> --&gt; the publication date of this draft</t>
            </list>
          </t>
          <t>The following Appendix section is to be removed prior to publication:
            <list  style="symbols">
              <t>Appendix A.  Change Log</t>
            </list>
          </t>
        </note>
    </front>
    <middle>

      <section title="Introduction">
        <t>This document defines two YANG <xref target="RFC7950"/> modules, one module
        to configure a NETCONF <xref target="RFC6241"/> client and the other module 
        to configure a NETCONF server.  Both modules support both NETCONF over
        SSH <xref target="RFC6242"/> and NETCONF over TLS <xref target="RFC7589"/>
        and NETCONF Call Home connections <xref target="RFC8071"/>.</t>
      </section>

      <section title="Terminology">
       <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL
       NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED",
       "MAY", and "OPTIONAL" in this document are to be interpreted as
       described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
       when, and only when, they appear in all capitals, as shown here.</t>
      </section>

      <section title="The NETCONF Client Model" anchor="netconf-client-model">
        <t>The NETCONF client model presented in this section supports both clients
        initiating connections to servers, as well as clients listening
        for connections from servers calling home.</t>

        <t>This model supports both the SSH and TLS transport
        protocols, using the SSH client and TLS client groupings defined in
        <xref target="I-D.ietf-netconf-ssh-client-server"/> and 
        <xref target="I-D.ietf-netconf-tls-client-server"/> respectively.</t>

        <t>All private keys and trusted certificates are held in the
        keystore model defined in <xref target="I-D.ietf-netconf-keystore"/>.</t>

        <t>YANG feature statements are used to enable implementations to advertise
        which parts of the model the NETCONF client supports.</t>

        <section title="Tree Diagram">
          <t>The following tree diagram <xref target="RFC8340"/>
          provides an overview of the data model for the "ietf-netconf-client" module.
          Just the container is displayed below, but there is also a reusable grouping
          called "netconf-client-grouping" that the container is using.</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-netconf-client-tree.txt)
]]></artwork>
            </figure>
          </t>
        </section>

        <section title="Example Usage">
          <t>The following example illustrates configuring a NETCONF
          client to initiate connections, using both the SSH and TLS
          transport protocols, as well as listening for call-home
          connections, again using both the SSH and TLS transport
          protocols.</t>
          <t>This example is consistent with the examples presented in
          Section 3.2 of <xref target="I-D.ietf-netconf-keystore"/>.</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-netconf-client.xml)
]]></artwork>
            </figure>
          </t>
        </section>

        <section title="YANG Module" anchor="ietf-netconf-client-module">
          <t>This YANG module has normative references to <xref target="RFC6242"/>,
          <xref target="RFC6991"/>, <xref target="RFC7589"/>, <xref target="RFC8071"/>,
          <xref target="I-D.ietf-netconf-ssh-client-server"/>, and
          <xref target="I-D.ietf-netconf-tls-client-server"/>.</t>
          <t>
            <figure>
              <artwork><![CDATA[
<CODE BEGINS> file "ietf-netconf-client@YYYY-MM-DD.yang"
INSERT_TEXT_FROM_FILE(ietf-netconf-client@YYYY-MM-DD.yang)
<CODE ENDS>
]]></artwork>
            </figure>
          </t>
        </section>
      </section>


      <section title="The NETCONF Server Model" anchor="netconf-server-model">
        <t>The NETCONF server model presented in this section supports servers
        both listening for connections as well as initiating call-home
        connections.</t>

        <t>This model supports both the SSH and TLS transport
        protocols, using the SSH server and TLS server groupings defined in
        <xref target="I-D.ietf-netconf-ssh-client-server"/> and 
        <xref target="I-D.ietf-netconf-tls-client-server"/> respectively.</t>

        <t>All private keys and trusted certificates are held in the
        keystore model defined in <xref target="I-D.ietf-netconf-keystore"/>.</t>

        <t>YANG feature statements are used to enable implementations to advertise
        which parts of the model the NETCONF server supports.</t>

        <section title="Tree Diagram">
          <t>The following tree diagram <xref target="RFC8340"/>
          provides an overview of the data model for the "ietf-netconf-server" module.
          Just the container is displayed below, but there is also a reusable grouping
          called "netconf-server-grouping" that the container is using.</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ietf-netconf-server-tree.txt)
]]></artwork>
            </figure>
          </t>
        </section>

        <section title="Example Usage">
          <t>The following example illustrates configuring a NETCONF server
          to listen for NETCONF client connections using both the SSH and 
          TLS transport protocols, as well as configuring call-home to two
          NETCONF clients, one using SSH and the other using TLS.</t>
          <t>This example is consistent with the examples presented in
          Section 3.2 of <xref target="I-D.ietf-netconf-keystore"/>.</t>
          <t>
            <figure>
              <artwork><![CDATA[
INSERT_TEXT_FROM_FILE(refs/ex-netconf-server.xml)
]]></artwork>
            </figure>
          </t>
        </section>

        <section title="YANG Module" anchor="ietf-netconf-server-module">
          <t>This YANG module has normative references to <xref target="RFC6242"/>,
          <xref target="RFC6991"/>, <xref target="RFC7407"/>, <xref target="RFC7589"/>,
          <xref target="RFC8071"/>, <xref target="I-D.ietf-netconf-ssh-client-server"/>,
          and <xref target="I-D.ietf-netconf-tls-client-server"/>.</t>

          <t>This YANG module imports YANG types from <xref target="RFC6991"/>,
          and YANG groupings from <xref target="RFC7407"/>,
          <xref target="I-D.ietf-netconf-ssh-client-server"/>
          and <xref target="I-D.ietf-netconf-ssh-client-server"/>.</t>
          <t>
            <figure>
              <artwork><![CDATA[
<CODE BEGINS> file "ietf-netconf-server@YYYY-MM-DD.yang"
INSERT_TEXT_FROM_FILE(ietf-netconf-server@YYYY-MM-DD.yang)
<CODE ENDS>
]]></artwork>
            </figure>
          </t>
        </section>
      </section>

      <section title="Design Considerations">
        <t>Editorial: this section is a hold over from before, previously called
        "Objectives".  It was only written two support the "server" (not the "client").
        The question is if it's better to add the missing "client" parts, or remove
        this section altogether.</t>

        <t>The primary purpose of the YANG modules defined herein is
        to enable the configuration of the NETCONF client and servers.
        This scope includes the following objectives:</t>
        <section title="Support all NETCONF transports">
          <t>The YANG module should support all current NETCONF 
          transports, namely NETCONF over SSH <xref target="RFC6242"/>, 
          NETCONF over TLS <xref target="RFC7589"/>, and to be 
          extensible to support future transports as necessary.</t>
          <t>Because implementations may not support all transports,
          the modules should use YANG &quot;feature&quot; statements
          so that implementations can accurately advertise which
          transports are supported.</t>
        </section>
        <section title="Enable each transport to select which keys to use">
          <t>Servers may have a multiplicity of host-keys or server-certificates
             from which subsets may be selected for specific uses.  For instance,
             a NETCONF server may want to use one set of SSH host-keys when listening
             on port 830, and a different set of SSH host-keys when calling
             home.  The data models provided herein should enable configuration
             of which keys to use on a per-use basis.</t>
        </section>
        <section title="Support authenticating NETCONF clients certificates">
          <t>When a certificate is used to authenticate a NETCONF client,
             there is a need to configure the server to know how to authenticate the 
             certificates.  The server should be able to authenticate the client's
             certificate either by using path-validation to a configured trust anchor
             or by matching the client-certificate to one previously configured.</t>
        </section>
        <section title="Support mapping authenticated NETCONF client certificates to usernames">
          <t>When a client certificate is used for TLS client authentication,
             the NETCONF server must be able to derive a username from the 
             authenticated certificate.  Thus the modules defined herein should enable
             this mapping to be configured.</t>
        </section>
        <section title="Support both listening for connections and call home">
          <t>The NETCONF protocols were originally defined as having the 
          server opening a port to listen for client connections.  More recently
          the NETCONF working group defined support for call-home 
          (<xref target="RFC8071"/>), enabling the server to
          initiate the connection to the client.  Thus the modules defined herein
          should enable configuration for both listening for connections and
          calling home.  Because implementations may not support both listening
          for connections and calling home, YANG &quot;feature&quot; statements
          should be used so that implementation can accurately 
          advertise the connection types it supports.</t>
        </section>
        <section title="For Call Home connections">
          <t>The following objectives only pertain to call home connections.</t>
          <section title="Support more than one NETCONF client">
            <t>A NETCONF server may be managed by more than one NETCONF client.
            For instance, a deployment may have one client for provisioning and
            another for fault monitoring.  Therefore, when it is desired for a
            server to initiate call home connections, it should be able to do
            so to more than one client.</t>
          </section>
          <section title="Support NETCONF clients having more than one endpoint">
            <t>A NETCONF client managing a NETCONF server may implement a 
            high-availability strategy employing a multiplicity of
            active and/or passive endpoint.  Therefore, when it is
            desired for a server to initiate call home connections,
            it should be able to connect to any of the client's endpoints.</t>
          </section>
          <section title="Support a reconnection strategy">
            <t>Assuming a NETCONF client has more than one endpoint, then
            it becomes necessary to configure how a NETCONF server should
            reconnect to the client should it lose its connection to one
            the client's endpoints.  For instance, the NETCONF server may
            start with first endpoint defined in a user-ordered list of 
            endpoints or with the last endpoints it was connected to.</t>
          </section>
          <section title="Support both persistent and periodic connections">
            <t>NETCONF clients may vary greatly on how frequently they need
            to interact with a NETCONF server, how responsive interactions
            need to be, and how many simultaneous connections they can 
            support.  Some clients may need a persistent connection to
            servers to optimize real-time interactions, while others 
            prefer periodic interactions in order to minimize resource
            requirements.  Therefore, when it is necessary for server
            to initiate connections, it should be configurable if the
            connection is persistent or periodic.</t>
          </section>
          <section title="Reconnection strategy for periodic connections">
            <t>The reconnection strategy should apply to both 
            persistent and periodic connections.  How it
            applies to periodic connections becomes clear when
            considering that a periodic "connection" is
            a logical connection to a single server.  That is,
            the periods of unconnectedness are intentional as 
            opposed to due to external reasons.  A periodic
            "connection" should always reconnect to 
            the same server until it is no longer able to, at 
            which time the reconnection strategy guides how to
            connect to another server.</t>
          </section>
          <section anchor="keepalives" title="Keep-alives for persistent connections">
            <t>If a persistent connection is desired, it is the 
            responsibility of the connection initiator to actively
            test the "aliveness" of the connection.  The connection
            initiator must immediately work to reestablish a 
            persistent connection as soon as the connection is
            lost.  How often the connection should be tested is
            driven by NETCONF client requirements, and therefore
            keep-alive settings should be configurable on a 
            per-client basis.</t>
          </section>
          <section title="Customizations for periodic connections">
            <t>If a periodic connection is desired, it is necessary for 
            the NETCONF server to know how often it should connect.  This
            frequency determines the maximum amount of time a NETCONF
            client may have to wait to send data to a server.  A server may
            connect to a client before this interval expires if desired
            (e.g., to send data to a client).</t>
          </section>
        </section>
      </section>

      <section title="Security Considerations">
        <t>The YANG module defined in this document uses groupings defined in 
        <xref target="I-D.ietf-netconf-ssh-client-server"/> and
        <xref target="I-D.ietf-netconf-tls-client-server"/>.  Please see the Security
        Considerations section in those documents for concerns related those groupings.</t>

        <t>The YANG module defined in this document is designed to be accessed via YANG
        based management protocols, such as NETCONF <xref target="RFC6241"/> and
        RESTCONF <xref target="RFC8040"/>.  Both of these protocols have mandatory-to-implement
        secure transport layers (e.g., SSH, TLS) with mutual authentication.</t>

        <t>The NETCONF access control model (NACM) <xref target="RFC8341"/> provides the means
        to restrict access for particular users to a pre-configured subset of all available
        protocol operations and content.</t>

        <t>There are a number of data nodes defined in this YANG module that are
        writable/creatable/deletable (i.e., config true, which is the default). These data
        nodes may be considered sensitive or vulnerable in some network environments. Write
        operations (e.g., edit-config) to these data nodes without proper protection can
        have a negative effect on network operations. These are the subtrees and data nodes
        and their sensitivity/vulnerability:
          <list style="hanging" hangIndent="6">
            <t hangText="   /:">The entire data trees defined by the modules defined in
              this draft are sensitive to write operations.  For instance, the addition or
              removal of references to keys, certificates, trusted anchors, etc., can
              dramatically alter the implemented security policy.  However, no NACM
              annotations are applied as the data SHOULD be editable by users other than
              a designated 'recovery session'.</t> <!-- KENT, FIXME -->
          </list>
        </t>

        <t>Some of the readable data nodes in this YANG module may be considered sensitive
        or vulnerable in some network environments. It is thus important to control read
        access (e.g., via get, get-config, or notification) to these data nodes. These are
        the subtrees and data nodes and their sensitivity/vulnerability:
          <list style="hanging" hangIndent="6">
            <t hangText="   NONE"></t>
          </list>
        </t>

        <t>Some of the RPC operations in this YANG module may be considered sensitive or
        vulnerable in some network environments. It is thus important to control access
        to these operations. These are the operations and their sensitivity/vulnerability:
          <list style="hanging" hangIndent="6">
            <t hangText="   NONE"></t>
          </list>
        </t>
      </section>

      <section title="IANA Considerations">
        <section title="The IETF XML Registry">
          <t>This document registers two URIs in the "ns" subregistry of the IETF XML 
          Registry <xref target="RFC3688"/>.  Following the format in 
          <xref target="RFC3688"/>, the following registrations are
          requested:</t>
          <t>
            <figure>
                <artwork><![CDATA[
   URI: urn:ietf:params:xml:ns:yang:ietf-netconf-client
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.

   URI: urn:ietf:params:xml:ns:yang:ietf-netconf-server
   Registrant Contact: The NETCONF WG of the IETF.
   XML: N/A, the requested URI is an XML namespace.
]]></artwork>
            </figure>
          </t>
        </section>
        <section title="The YANG Module Names Registry">
          <t>This document registers two YANG modules in the
          YANG Module Names registry <xref target="RFC6020"/>.
          Following the format in <xref target="RFC6020"/>, the
          the following registrations are requested:</t>
          <t>
            <figure>
                <artwork><![CDATA[
   name:         ietf-netconf-client
   namespace:    urn:ietf:params:xml:ns:yang:ietf-netconf-client
   prefix:       ncc
   reference:    RFC XXXX

   name:         ietf-netconf-server
   namespace:    urn:ietf:params:xml:ns:yang:ietf-netconf-server
   prefix:       ncs
   reference:    RFC XXXX
]]></artwork>
            </figure>
          </t>
        </section>
      </section>


    </middle>

    <back>
      <references title="Normative References">
        <?rfc include="reference.RFC.2119.xml"?>
        <?rfc include="reference.RFC.6020.xml"?>
        <?rfc include="reference.RFC.6241.xml"?>
        <?rfc include="reference.RFC.6242.xml"?>
        <?rfc include="reference.RFC.6991.xml"?>
        <?rfc include="reference.RFC.7407.xml"?>
        <?rfc include="reference.RFC.7589.xml"?>
        <?rfc include="reference.RFC.7950.xml"?>
        <?rfc include="reference.RFC.8174.xml"?>
        <?rfc include="reference.I-D.ietf-netconf-keystore"?>
        <?rfc include="reference.I-D.ietf-netconf-ssh-client-server"?>
        <?rfc include="reference.I-D.ietf-netconf-tls-client-server"?>
      </references>

      <references title="Informative References">
        <?rfc include="reference.RFC.3688.xml"?>
        <?rfc include="reference.RFC.8040.xml"?>
        <?rfc include="reference.RFC.8071.xml"?>
        <?rfc include="reference.RFC.8340.xml"?>
        <?rfc include="reference.RFC.8341.xml"?>
      </references>

      <section title="Change Log">
        <section title="00 to 01">
          <t>
            <list style="symbols">
              <t>Renamed "keychain" to "keystore".</t>
            </list>
          </t>
        </section>
        <section title="01 to 02">
          <t>
            <list style="symbols">
              <t>Added to ietf-netconf-client ability to connected to a cluster
              of endpoints, including a reconnection-strategy.</t>
              <t>Added to ietf-netconf-client the ability to configure connection-type
              and also keep-alive strategy.</t>
              <t>Updated both modules to accomodate new groupings in the ssh/tls
              drafts.</t> 
            </list>
          </t>
        </section>
        <section title="02 to 03">
          <t>
            <list style="symbols">
              <t>Refined use of tls-client-grouping to add a must statement
                 indicating that the TLS client must specify a client-certificate.</t>
              <t>Changed 'netconf-client' to be a grouping (not a container).</t>
            </list>
          </t>
        </section>
        <section title="03 to 04">
          <t>
            <list style="symbols">
              <t>Added RFC 8174 to Requirements Language Section.</t>
              <t>Replaced refine statement in ietf-netconf-client
                 to add a mandatory true.</t>
              <t>Added refine statement in ietf-netconf-server
                 to add a must statement.</t>
              <t>Now there are containers and groupings, for both the 
                 client and server models.</t>
            </list>
          </t>
        </section>
        <section title="04 to 05">
          <t>
            <list style="symbols">
              <t>Now tree diagrams reference ietf-netmod-yang-tree-diagrams</t>
              <t>Updated examples to inline key and certificates (no longer
                 a leafref to keystore)</t>
            </list>
          </t>
        </section>
        <section title="05 to 06">
          <t>
            <list style="symbols">
              <t>Fixed change log missing section issue.</t>
              <t>Updated examples to match latest updates to the crypto-types,
                 trust-anchors, and keystore drafts.</t>
              <t>Reduced line length of the YANG modules to fit within 69 columns.</t>
            </list>
          </t>
        </section>
        <section title="06 to 07">
          <t>
            <list style="symbols">
              <t>Removed "idle-timeout" from "persistent" connection config.</t>
              <t>Added "random-selection" for reconnection-strategy's "starts-with" enum.</t>
              <t>Replaced "connection-type" choice default (persistent) with "mandatory true".</t>
              <t>Reduced the periodic-connection's "idle-timeout" from 5 to 2 minutes.</t>
              <t>Replaced reconnect-timeout with period/anchor-time combo.</t>
            </list>
          </t>
        </section>
        <section title="07 to 08">
          <t>
            <list style="symbols">
              <t>Modified examples to be compatible with new crypto-types algs</t>
            </list>
          </t>
        </section>
      </section>

      <section title="08 to 09">
        <t>
          <list style="symbols">
            <t>Corrected use of "mandatory true" for "address" leafs.</t>
            <t>Updated examples to reflect update to groupings defined in the keystore draft.</t>
          </list>
        </t>
      </section>

      <section title="Acknowledgements" numbered="no">
        <t>The authors would like to thank for following for
        lively discussions on list and in the halls (ordered
        by last name): Andy Bierman, Martin Bjorklund, Benoit Claise, Ramkumar Dhanapal,
        Mehmet Ersue, Balázs Kovács, David Lamparter, Alan Luchuk, Ladislav Lhotka,
        Radek Krejci, Tom Petch, Juergen Schoenwaelder, Phil Shafer, Sean Turner, and
        Bert Wijnen.</t>
     </section>

    </back>
</rfc>

